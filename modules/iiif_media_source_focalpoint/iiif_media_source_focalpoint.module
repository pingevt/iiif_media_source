<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Url;
use Drupal\iiif_media_source\Plugin\Field\FieldType\IiifId;
use Drupal\node\Entity\Node;

/**
 * Implements hook_entity_insert().
 *
 * @see focal_point_entity_update
 */
function iiif_media_source_focalpoint_entity_insert(EntityInterface $entity) {
  iiif_media_source_focalpoint_entity_update($entity);
}

/**
 * Implements hook_entity_update().
 *
 * Saves the focal point value for the image file entity about to be saved.
 */
function iiif_media_source_focalpoint_entity_update(EntityInterface $entity) {
  // ksm($entity);
  // ksm("hi");
  // Only worry about entities that are fieldable.
  if ($entity instanceof FieldableEntityInterface) {
    // ksm("checking fields...");
    // Loop all the fields and save focal point values for images.
    foreach ($entity->getFieldDefinitions() as $key => $field) {
      // ksm($key, $field->getType());
      if ($field->getType() == 'iiif_id' && $entity->hasField($field->getName())) {
        // ksm("Correct field, i think");
      // if ($key == "field_media_iiif_image") {
        // ksm($entity->{$field->getName()});
        // @todo do i need to create settings for this module for croptype? Probably.
        $crop_type = \Drupal::config('focal_point.settings')->get('crop_type');
        // ksm( $crop_type );
        // Loop through all values for this field. Its cardinality might be > 1.
        foreach ($entity->{$field->getName()} as $item) {

          if (!$item instanceof IiifId) {
            // ksm("NOT A IiifId FIELD");
            continue;
          }

          $focal_point_manager = \Drupal::service('iiif_media_source_focalpoint.focal_point_manager');
          // $crop = $focal_point_manager->getCropEntity($item->entity, $crop_type);
          $crop = $focal_point_manager->getCropIiifEntity($item, $crop_type, $entity->id());
          // ksm($crop);

          if ($crop) {
            $focal_point = NULL;
            // Use the default focal point on new crop entities.
            if ($crop->isNew()) {
              $focal_point = \Drupal::config('focal_point.settings')->get('default_value');
            }

            // Use the focal point set over the UI.
            if (!empty($item->focal_point)) {
              $focal_point = $item->focal_point;

              // Keep the original focal_point value to be able to use it during hooks.
              if (!$crop->get('x')->isEmpty() && !$crop->get('y')->isEmpty()) {
                $x = $crop->get('x')->value;
                $y = $crop->get('y')->value;
                $width = $item->width ?? 0;
                $height = $item->height ?? 0;
                $focal_point_original = $focal_point_manager->absoluteToRelative($x, $y, $width, $height);
                $entity->{$field->getName()}->focal_point_original = implode(',', $focal_point_original);
              }
            }

            ksm($focal_point, $item);

            if ($focal_point && $item->width && $item->height) {
              [$x, $y] = explode(',', $focal_point);
              $focal_point_manager->saveCropEntity($x, $y, $item->width, $item->height, $crop);
            }
            else {
              ksm("didn't save crop");
            }
          }
        }
      }
    }
  }
}
